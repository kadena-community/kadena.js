name: 'Start Kadena Devnet Docker-Compose'

inputs:
  chainweb_node_container_id:
    description: "sha-FFFFFFF or other tag of a chainweb-node container"
    required: false
    default: "latest"
  GITHUB_TOKEN:
    description: "secrets.GITHUB_TOKEN of invoker"
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
         repository: kadena-io/integration-tests
         path: integration-tests
    - uses: actions/checkout@v3
      with:
        repository: kadena-io/devnet
        path: devnet
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.GITHUB_TOKEN }}
    - name: Start devnet node 
      working-directory: ./devnet
      shell: bash
      env:
        CHAINWEB_NODE_IMAGE: ghcr.io/kadena-io/chainweb-node:${{ inputs.chainweb_node_container_id }}
        ES_CLOUD_ID: ${{ inputs.ES_CLOUD_ID }}
        ES_CLOUD_AUTH: ${{ inputs.ES_CLOUD_AUTH }}
      run: |
        echo "Testing with: $CHAINWEB_NODE_IMAGE"
        ls
        docker compose -f docker-compose.indexer.yaml up -d
    - name: Check health of network
      working-directory: ./devnet
      shell: bash
      run: |
        curl -s http://localhost:8080/health_check || true
        curl -s http://localhost:8080/chainweb/0.0/development/cut || true
        docker compose ps
        docker container exec devnet-bootstrap-node-1 ls -R /chainweb/db
        free -m
        df -h
        ps ax

     - name: Collect docker logs on failure
       if: failure()
       uses: jwalton/gh-docker-logs@v2
       with:
         dest: './logs'
     - name: Tar logs
       if: failure()
       run: tar cvzf ./logs.tgz ./logs
     - name: Upload logs to GitHub
       if: failure()
       uses: actions/upload-artifact@master
       with:
         name: docker-logs.tgz
         path: ./logs.tgz
