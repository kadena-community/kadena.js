// generated by pactjs-generator and pactjs-cli@0.1.1
import { buildUnsignedTransaction, ICommandBuilder } from '@kadena/client';

export default {
  'safe-transfer': (args: {
    fromAcct: string;
    toAcct: string;
    amount: string;
    chain: string;
    network: string;
    fromKey: string;
  }): ICommandBuilder<{}> => {
    const parts = [
      'code: |-\r\n  (coin.transfer "',
      '" "',
      '" ',
      ')\r\ndata:\r\npublicMeta:\r\n  chainId: "',
      '"\r\n  sender: ',
      '\r\n  gasLimit: 2500\r\n  gasPrice: 1.0e-8\r\n  ttl: 600\r\nnetworkId: ',
      '\r\nsigners:\r\n  - pubKey: ',
      '\r\n    caps:\r\n      - name: "coin.TRANSFER"\r\n        args: [',
      ', ',
      ', ',
      ']\r\n      - name: "coin.GAS"\r\n        args: []\r\ntype: exec\r\n',
    ];
    const holes = [
      'fromAcct',
      'toAcct',
      'amount',
      'chain',
      'fromAcct',
      'network',
      'fromKey',
      'fromAcct',
      'toAcct',
      'amount',
    ];

    return buildUnsignedTransaction(parts, holes, args);
  },

  'transfer.json': (args: {
    fromAcct: string;
    toAcct: string;
    amount: string;
    chain: string;
    network: string;
    fromKey: string;
  }): ICommandBuilder<{}> => {
    const parts = [
      '{\r\n  "code": "(coin.transfer \\"',
      '\\" \\"',
      '\\" ',
      ')",\r\n  "data": null,\r\n  "publicMeta": {\r\n      "chainId": "',
      '",\r\n      "sender": ',
      ',\r\n      "gasLimit": 2500,\r\n      "gasPrice": 1e-8,\r\n      "ttl": 600\r\n  },\r\n  "networkId": "',
      '",\r\n  "signers": [\r\n      {\r\n          "pubKey": "',
      '",\r\n          "caps": [\r\n              {\r\n                  "name": "coin.TRANSFER",\r\n                  "args": [\r\n                      "',
      '", "',
      '", "',
      '"\r\n                  ]\r\n              },\r\n              {\r\n                  "name": "coin.GAS",\r\n                  "args": []\r\n              }\r\n          ]\r\n      }\r\n  ],\r\n  "type": "exec"\r\n}\r\n',
    ];
    const holes = [
      'fromAcct',
      'toAcct',
      'amount',
      'chain',
      'fromAcct',
      'network',
      'fromKey',
      'fromAcct',
      'toAcct',
      'amount',
    ];

    return buildUnsignedTransaction(parts, holes, args);
  },

  'transfer.yaml': (args: {
    fromAcct: string;
    toAcct: string;
    amount: string;
    chain: string;
    network: string;
    fromKey: string;
  }): ICommandBuilder<{}> => {
    const parts = [
      'code: |-\r\n  (coin.transfer "',
      '" "',
      '" ',
      ')\r\ndata:\r\npublicMeta:\r\n  chainId: "',
      '"\r\n  sender: ',
      '\r\n  gasLimit: 2500\r\n  gasPrice: 1.0e-8\r\n  ttl: 600\r\nnetworkId: ',
      '\r\nsigners:\r\n  - pubKey: ',
      '\r\n    caps:\r\n      - name: "coin.TRANSFER"\r\n        args: [',
      ', ',
      ', ',
      ']\r\n      - name: "coin.GAS"\r\n        args: []\r\ntype: exec\r\n',
    ];
    const holes = [
      'fromAcct',
      'toAcct',
      'amount',
      'chain',
      'fromAcct',
      'network',
      'fromKey',
      'fromAcct',
      'toAcct',
      'amount',
    ];

    return buildUnsignedTransaction(parts, holes, args);
  },
};
