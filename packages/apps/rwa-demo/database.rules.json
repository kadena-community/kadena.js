{
  "rules": {
    "$contractName": {
      ".read": true,
      ".write": true,
      "acounts": {
        "$accountName": {
          "account": {
            ".validate": "newData.hasChildren(['accountName', 'alias']) && newData.child('alias').isString() && newData.child('accountName').isString()"
          }
        }
      }
    },

    "organisationsUsers": {
      "$organisationId": {
        ".read": "auth != null",
        "$userId": {
          ".write": "auth != null && (auth.uid === $userId || auth.token.rootAdmin === true || auth.token.orgAdmins[$organisationId] === true)"
        }
      }
    },
    "organisationsData": {
      ".read": "auth.token.rootAdmin === true",
      "$organisationId": {
        ".read": true,
        ".write": "(auth.token.rootAdmin === true || auth.token.orgAdmins[$organisationId] === true)",
        "domains": {
          "$key": {
            ".indexOn": ["value"]
          }
        }
      }
    },
    "organisationsRoles": {
      ".write": false,
      "$organisationId": {
        ".read": "auth.token.rootAdmin === true || auth.token.orgAdmins[$organisationId] === true"
      },
      "root": {
        ".read": "auth != null && auth.token.rootAdmin === true"
      }
    },
    "organisations": {
      "$organisationId": {
        "assets": {
          ".read": "auth != null",
          ".write": "auth.token.rootAdmin === true || auth.token.orgAdmins[$organisationId] === true  || auth.token.allowedOrgs[$organisationId] === true"
        },
        "messages": {
          "$assetId": {
            "$userId": {
              "$account": {
                ".read": "auth != null && auth.uid === $userId",
                ".write": "auth != null"
              }
            }
          }
        },
        "users": {
          "$userId": {
            ".read": "auth != null && auth.uid === $userId",
            ".write": "auth != null && auth.uid === $userId",
            "data": {
              "displayName": {
                ".validate": "newData.isString() && newData.val().length <= 40"
              }
            },
            "aliases": {
              "$address": {
                "alias": {
                  ".validate": "newData.isString() && newData.val().length <= 40"
                }
              }
            },
            "accounts": {
              "$address": {
                ".validate": "newData.hasChildren(['address', 'alias', 'overallBalance', 'publicKey', 'walletName', 'guard', 'keyset'])",
                "address": {
                  ".validate": "newData.isString() && newData.val() === $address && newData.val().length <= 70"
                },
                "alias": {
                  ".validate": "newData.isString() && newData.val().length <= 50"
                },
                "overallBalance": {
                  ".validate": "newData.isString() && newData.val().length <= 50"
                },
                "publickey": {
                  ".validate": "newData.isString() && newData.val().length <= 50"
                },
                "walletName": {
                  ".validate": "newData.isString() && newData.val().length <= 50"
                },
                "guard": {
                  "pred": {
                    ".validate": "newData.isString() && newData.val().length <= 50"
                  },
                  "principal": {
                    ".validate": "newData.isString() && newData.val().length <= 70"
                  },
                  "keys": {
                    "$id": {
                      ".validate": "newData.isString() && newData.val().length <= 70"
                    }
                  }
                },
                "keyset": {
                  "pred": {
                    ".validate": "newData.isString() && newData.val().length <= 50"
                  },
                  "principal": {
                    ".validate": "newData.isString() && newData.val().length <= 70"
                  },
                  "keys": {
                    "$id": {
                      ".validate": "newData.isString() && newData.val().length <= 70"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "transactions": {
      ".read": true,
      ".write": true
    }
  }
}
