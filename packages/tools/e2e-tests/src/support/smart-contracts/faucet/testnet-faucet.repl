(begin-tx "Load modules")

(load "root/gas-payer-v1.pact")
(load "root/fungible-v2.pact")
(load "root/fungible-xchain-v1.pact")
(load "root/coin-v5.pact")
(load "root/ns.pact")

(create-table coin.coin-table)

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "dfb16b13e4032a6878fd98506b22cb0d6e5932c541e656b7ee5d69d72e6eb76e", "caps": []},
  {"key": "19b0bfa805be7ab93b4774a874a64f1cb715b8aa88e82c409cf64a0f41298385", "caps": []}
])
(env-data
  { 'admin-keyset :
      {
          'keys: [
              "dfb16b13e4032a6878fd98506b22cb0d6e5932c541e656b7ee5d69d72e6eb76e",
              "19b0bfa805be7ab93b4774a874a64f1cb715b8aa88e82c409cf64a0f41298385",
              "ec3beb8e11c264e23365941ba6b561744e0d0d695eff962c173e89e8c5e00ae1"
          ],
          'pred: 'keys-any
      }
  }
)

(begin-tx "Define namespace")
(let* ((coin-faucet-namespace (ns.create-principal-namespace (read-keyset 'admin-keyset)))
       (coin-faucet-keyset (format "{}.{}" [ coin-faucet-namespace 'admin-keyset ]))
      )
  (define-namespace
    coin-faucet-namespace
    (read-keyset 'admin-keyset)
    (read-keyset 'admin-keyset))
  (namespace coin-faucet-namespace)
  (define-keyset
    coin-faucet-keyset
    (read-keyset 'admin-keyset)
  )
)
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "whatever", "caps": []}])
(env-data {"contract-admins": ["whatever"]})

(begin-tx "Create coins for the Faucet")

(test-capability (coin.COINBASE))
(coin.coinbase 'contract-admins (read-keyset 'contract-admins) 1000000.0)

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "19b0bfa805be7ab93b4774a874a64f1cb715b8aa88e82c409cf64a0f41298385", "caps": []}])
(env-data {
  "init": true,
  'coin-faucet-namespace: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49",
  'coin-faucet-admin-keyset-name: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.admin-keyset"
})

(begin-tx "Load the Faucet pact (initial deploy)")

(load "testnet-faucet.pact")

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "19b0bfa805be7ab93b4774a874a64f1cb715b8aa88e82c409cf64a0f41298385", "caps": []}])
(env-data {
  "init": false,
  'coin-faucet-namespace: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49",
  'coin-faucet-admin-keyset-name: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.admin-keyset"
})

(begin-tx "Load the Faucet pact (redeploy/update)")

(load "testnet-faucet.pact")

(commit-tx)

(verify "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet")

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "ec3beb8e11c264e23365941ba6b561744e0d0d695eff962c173e89e8c5e00ae1", "caps": []}
])
(env-data
  { 'admin-keyset :
      {
          'keys: [
              "dfb16b13e4032a6878fd98506b22cb0d6e5932c541e656b7ee5d69d72e6eb76e",
              "ec3beb8e11c264e23365941ba6b561744e0d0d695eff962c173e89e8c5e00ae1"
          ],
          'pred: 'keys-any
      }
  }
)

(begin-tx "Rotate the keyset")
(expect
  "Keyset can be rotated"
  "Keyset defined"
  (define-keyset "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.admin-keyset" (read-keyset 'admin-keyset))
)
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "19b0bfa805be7ab93b4774a874a64f1cb715b8aa88e82c409cf64a0f41298385", "caps": []}])
(env-data {
  "init": false,
  'coin-faucet-namespace: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49",
  'coin-faucet-admin-keyset-name: "n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.admin-keyset"
})

(begin-tx "Load the Faucet pact with outdated/removed key (redeploy/update)")

;  (expect-failure "Loading testnet-faucet.pact..." "Loading testnet-faucet.pact..." (load "testnet-faucet.pact"))
;; TODO: Uncomment the following line to verify loading fails when signed with unauthorized key
;  (load "testnet-faucet.pact")
(expect-failure "Expect deploy fail"
  (try (enforce false "fail") (load "testnet-faucet.pact"))
)

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-data {'tx-type: "exec", 'exec-code: ["(n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.create-and-request-coin"]})

(begin-tx "Test Gas payment")
(test-capability (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.GAS_PAYER "k:567223a8fac06e78a8e5b5bcbd02e9b4d839402e2e509e0f657aaf79cc30c40b" 1 1.0))
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "whatever", "caps": [(coin.TRANSFER "contract-admins" "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" 1000000.0)]}])

(begin-tx "Fund the Faucet itself")
(coin.transfer-create "contract-admins" "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.create-gas-payer-guard) 1000000.0)
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(begin-tx "Test the current time function")

(env-chain-data {"block-time": (time "2019-08-27T12:00:00Z")})
(expect "Can call via public function." (time "2019-08-27T12:00:00Z") (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.curr-time))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "test-0-key", "caps": []}]);
(env-data {"test-0-keyset": ["test-0-key"]})

(begin-tx "Create account")

(coin.create-account "test-0" (read-keyset "test-0-keyset"))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(begin-tx "Request more coins than allowed")

(expect-failure "exceeded request limit" "Has reached maximum coin amount per request" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.request-coin "test-0" 100.1))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "test-0-key", "caps": [(coin.TRANSFER "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" "test-0" 100.0)]},
  {"key": "whatever", "caps": []}
]);
(env-data {"test-0-keyset": ["test-0-key"]})

(begin-tx "Do a successful request")

(expect "Write succeeded" "Write succeeded" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.request-coin "test-0" 100.0))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "test-0-key", "caps": [(coin.TRANSFER "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" "test-0" 100.0)]},
  {"key": "whatever", "caps": []}
]);
(env-data {"test-0-keyset": ["test-0-key"]})

(begin-tx "Request more coins too soon")

(expect-failure "Coin can be requested every 30 minutes" "Coin can be requested every 30 minutes" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.request-coin "test-0" 100.0))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "test-0-key", "caps": [(coin.TRANSFER "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" "test-0" 100.0)]},
  {"key": "whatever", "caps": []}
])

(env-chain-data {"block-time": (time "2019-08-27T12:30:00Z")})

(begin-tx "Try funding same account after 30 minutes")

(expect "Write succeeded" "Write succeeded" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.request-coin "test-0" 100.0))

(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "test-1-key", "caps": []}])
(env-data {"test-1-keyset": ["test-1-key"]})

(begin-tx "Fail Create account and request coin method with too much coins")
;;Test create-and-request-coin
(expect-failure "exceeded request limit" "Has reached maximum coin amount per request" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.create-and-request-coin "test-1" (read-keyset "test-1-keyset") 100.1))
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [
  {"key": "test-1-key", "caps": [(coin.TRANSFER "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" "test-1" 100.0)]},
  {"key": "whatever", "caps": []}
])
(env-data {"test-1-keyset": ["test-1-key"]})

(begin-tx "Create account and request coin method")
(expect "Write succeeded" "Write succeeded" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.create-and-request-coin "test-1" (read-keyset "test-1-keyset") 100.0))
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "test-1-key", "caps": [(coin.TRANSFER "test-1" "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" 10.0)]}])

(begin-tx "Test return-coin")
(expect "Write succeeded" "Write succeeded" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.return-coin "test-1" 10.0))
(commit-tx)

;; New Testcase

(env-sigs [])
(env-data {})

(env-sigs [{"key": "test-1-key", "caps": [(coin.TRANSFER "test-1" "c:Ecwy85aCW3eogZUnIQxknH8tG8uXHM5QiC__jeI0nWA" 90.1)]}])

(begin-tx "Fail return coin")
(expect-failure "Insufficient funds" "Insufficient funds" (n_d8cbb935f9cd9d2399a5886bb08caed71f9bad49.coin-faucet.return-coin "test-1" 90.1))
(commit-tx)
